loop, lda carry
add A_PTR I
sta C_PTR I ; save carry[i-1] + A[i] --- (1)

; saving carry
cla
cil
sta carry

lda C_PTR I
add B_PTR I
sta C_PTR I ; save carry[i-1] + A[i] + B[i] --- (2)

; orring carry with saved carry
; Note that carry will be set from (1) XOR (2)
; that's why checking it twice
cla
cil
sza
sta carry

; inc ptrs
lda A_PTR
add one
sta A_PTR
lda B_PTR
add one
sta B_PTR
lda C_PTR
add one
sta C_PTR

; inc counter
lda counter
add one
sta counter

sza
bun loop

; setting E
lda carry
cir

hlt

; DATA -----

counter, -4
one, 1
carry, 0

A_PTR, adr A
B_PTR, adr B
C_PTR, adr C
A, 0xffff
0xffff
0xffff
0xffff
B, 1
0
0
0
C, 0
0
0
0


